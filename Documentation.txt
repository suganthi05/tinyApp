Documentation
1. Create a new directory tinyApp
2. Create a git repo tinyApp
2.npm init - Enter description,git repo and author 
3. npm install express --save
4.a)git init
  b)git status .
  c)git add .
  d)git commit -m "npm installed and git initialized"
  e)git push --set-upstream https://github.com/suganthi05/tinyApp master 
  f)Enter git Username and Password
    (Error Message ---> need to do git pull)
  g)git pull https://github.com/suganthi05/tinyApp
  h)git push --set-upstream https://github.com/suganthi05/tinyApp master 
 5. create a new Web Server file - express_server.js
 6. express_server.js
		var express = require("express");
		var app = express();
		var PORT = 8080; // default port 8080
		------------------------------
        // urlDatabase -to keep track of all the URLs and their shortened forms.
        ------------------------------

		var urlDatabase = {
		  "b2xVn2": "http://www.lighthouselabs.ca",
		  "9sm5xK": "http://www.google.com"
		};

		app.get("/", (req, res) => {
		  res.send("Hello!");
		});

		app.get("/urls.json",(req,res) => {
		res.json(urlDatabase);
});

		app.listen(PORT, () => {
		  console.log(`Example app listening on port ${PORT}!`);
		});
 7. npm install ejs --save
 8. app.set("view engine", "ejs"); --->This tells the Express app to use EJS as its templating engine
 9. vagrant [tinyApp]> mkdir views
	vagrant [tinyApp]> cd views
	vagrant [views]> touch urls_index.ejs
10.urls_index.ejs -->
	To display all URLs and their shortened forms
11. Route handler for "/urls" & use res.render() to pass the URL data to template.
	app.get("/urls", (req,res) => {
	let templateVars = {urls: urlDatabase};
	res.render("urls_index", tempelateVars);
});
     templateVars --> 
12. created show.ejs,index.ejs,_header.ejs
-------------------Template Engine completed---------------

13. npm install body-parser --save
14.
15. npm install --save-dev nodemon
    edit the scripts section in package.json 
    start:"....express_server.js



  




